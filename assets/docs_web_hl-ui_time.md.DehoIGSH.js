import{ax as i,q as e,t as a,S as d,U as l,aV as h,ai as n,p as r}from"./chunks/framework.CHV6MyHS.js";const b=JSON.parse('{"title":"时间","description":"","frontmatter":{"title":"时间"},"headers":[],"relativePath":"docs/web/hl-ui/time.md","filePath":"docs/web/hl-ui/time.md","lastUpdated":1730271552000}'),p={name:"docs/web/hl-ui/time.md"};function o(k,t,E,c,m,g){const s=n("hl-demo-time");return r(),e("div",null,[t[0]||(t[0]=a("h3",{id:"基本用法",tabindex:"-1"},[d("基本用法 "),a("a",{class:"header-anchor",href:"#基本用法","aria-label":'Permalink to "基本用法"'},"​")],-1)),l(s),t[1]||(t[1]=h(`<blockquote><p>当容器不足以完全显示日期时间，组件会将时间两行显示，上面显示日期，下面显示时间</p></blockquote><h3 id="如何拆分日期和时间" tabindex="-1">如何拆分日期和时间 <a class="header-anchor" href="#如何拆分日期和时间" aria-label="Permalink to &quot;如何拆分日期和时间&quot;">​</a></h3><blockquote><p>组件默认根据空格拆分日期和事件；也可以配置separator属性来指定拆分字符</p></blockquote><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hl-time-parser</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2023-01-18~14:15:00&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> separator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>time</td><td>时间</td><td>String</td><td>—</td><td>—</td></tr><tr><td>separator</td><td>拆分字符</td><td>String</td><td>—</td><td>—</td></tr><tr><td>nowrap</td><td>容器不足以完全显示日期时间也不换行</td><td>Boolean</td><td>—</td><td>false</td></tr></tbody></table>`,6))])}const y=i(p,[["render",o]]);export{b as __pageData,y as default};
