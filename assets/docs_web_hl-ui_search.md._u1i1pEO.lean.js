import{aw as l,t as s,v as e,S as r,U as d,aU as o,ai as n,q as h}from"./chunks/framework.CbHxagKl.js";const x=JSON.parse('{"title":"列表页","description":"","frontmatter":{"title":"列表页"},"headers":[],"relativePath":"docs/web/hl-ui/search.md","filePath":"docs/web/hl-ui/search.md","lastUpdated":1731910551000}'),i={name:"docs/web/hl-ui/search.md"};function c(p,t,u,m,b,f){const a=n("hl-demo-search-page");return h(),s("div",null,[t[0]||(t[0]=e("p",null,"一个列表页面可以分成三部分",-1)),t[1]||(t[1]=e("ul",null,[e("li",null,"搜索区域：搜索区域使用flex布局，搜索条件被包含在了el-form中，条件自动换行"),e("li",null,"列表区域：列表区域的高度是整个页面的高度减去搜索区域高度再减去其他组件高度，并且当其他区域的高度变化时列表区域可以自适应"),e("li",null,"其他组件：这里包含了需要显示在表格下面的内容，比如分页")],-1)),t[2]||(t[2]=e("h3",{id:"基本用法",tabindex:"-1"},[r("基本用法 "),e("a",{class:"header-anchor",href:"#基本用法","aria-label":'Permalink to "基本用法"'},"​")],-1)),d(a),t[3]||(t[3]=o('<div class="warning custom-block"><p class="custom-block-title">提示</p><p>虽然hl-search-page已经帮我们减少了页面的结构布局代码，但是在开发中我们大概率还是用不到hl-search-page，因为示例代码中依然存在很多重复性代码，对此@hl/hooks包中的<a href="/docs/docs/hooks/use-list.html">useList</a>函数又对hl-search-page封装了一层，大大减少了我们的重复性代码。</p></div><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table tabindex="0"><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>header</td><td>搜索区域的内容</td></tr><tr><td>table</td><td>列表内容</td></tr><tr><td>default</td><td>列表后面的内容</td></tr></tbody></table>',3))])}const g=l(i,[["render",c]]);export{x as __pageData,g as default};
